#======================================== ggbetweenstats =========================================#
##' Thesis: Paper02 - Quantifying ecosystem services.                                             #
##' Author: Ricardo Reale, realericardo[ at ]gmail[ dot ]com                                      #
##' Adapted from: Zablotski (2022, May 16). yuzaR-Blog: R demo | Kruskal-Wallis test |            #
##' How to conduct, visualize, interpret & more ðŸ˜‰.                                               #
##' Retrieved from https://yuzar-blog.netlify.app/posts/2022-04-13-kw/                            #
##' Created: Apr/2022                                                                             #
##' Last commit: Apr/2022                                                                         #
#=================================================================================================#

setwd("...")

# Packages
library(readr)
library(tidyverse)
library(ggstatsplot)
library(effectsize)
library(rstantools)
library(dlookr)
library(ggplot2)
library(ggpmisc)
library(scales)
library(car)
library(afex)
library(effects)    # for model visualization & more
library(performance)    # model assumptions & performance
library(pcal) #bfcator_interpret

#============================================= Data ==============================================#
Data <- read.csv(
  ".../Data.csv")

#============================== Trend groups Classification Ant.Nat ==============================#
#========================================= Normality test ========================================#
Data %>% ## Need to check all variables and groups of interest
  group_by(Clas_ant.nat.2018) %>% 
  normality(TWSrec_mm_SL_s85)
### Shapiro-Wilk test
## p<0.05 => NOT normally -> even if only one group p<0.05 is sufficient to say
## p>0.05 => normally distributed

#==================== Levene's test for homogeneity of variance across groups. ===================#
leveneTest(TWSrec_mm_SL_s85 ~ Clas_ant.nat.2018, Data) ## Need to check all variables and groups of interest
## p<0.05 => variance are different >> Welch's ANOVA >> F
## p>0.05 => variance NOT Different >> Fisher  ANOVA >> T

## Statistical comparison beteween groups (Native, Changin, Anthropized)
c1 <- ggbetweenstats(
  data = Data,
  x    = Clas_ant.nat.2018, # Clas_ant2018.nat.1985 / Clas_ant2018.nat.2002 / Clas_ant.nat.2018
  y    = CHIRPS_mm_SL_s02, ## normally distributed and Different Variance
  results.subtitle = T,
  var.equal = F, # F for Welsh ANOVA: Variance different
  type = "p", # parametric, nonparametric, robust, bayes
  p.adjust.method = "bonferroni",
  bf.message = T, # only usefull for parametric test
  pairwise.display = "s",
  centrality.point.args = list(size = 2, color = "darkred"),
  outlier.tagging = TRUE,
  outlier.label = region) + 
  ylab("CHIRPS - 2002-2016 (mm/month)") +
  xlab("") +
  theme_classic() + theme(legend.position = "none")

c2 <- ggbetweenstats(
  data = Data,
  x    = Clas_ant.nat.2018, # Clas_ant2018.nat.1985 / Clas_ant2018.nat.2002 / Clas_ant.nat.2018
  y    = GRACE_mm_SL_s02, ## normally distributed and variance NOT differs
  results.subtitle = T,
  var.equal = T, # T for Fisher ANOVA: Variance NOT Differs
  type = "p", # parametric, nonparametric, robust, bayes
  p.adjust.method = "bonferroni",
  bf.message = T, # only usefull for parametric test
  pairwise.display = "s",
  centrality.point.args = list(size = 2, color = "darkred"),
  outlier.tagging = TRUE,
  outlier.label = region) + 
  ylab("GRACE - 2002-2016 (mm/month)") +
  xlab("") +
  theme_classic() + theme(legend.position = "none")

c3 <- ggbetweenstats(
  data = Data, 
  x    = Clas_ant.nat.2018, # Clas_ant2018.nat.1985 / Clas_ant2018.nat.2002 / Clas_ant.nat.2018
  y    = CHIRPS_mm_SL_s85, ## NOT normally distributed and Different Variance
  results.subtitle = T,
  var.equal = T, # F for Welsh ANOVA: Variance different
  type = "p", # parametric, nonparametric, robust, bayes
  p.adjust.method = "bonferroni",
  bf.message = T, # only usefull for parametric test
  pairwise.display = "s",
  centrality.point.args = list(size = 2, color = "darkred"),
  outlier.tagging = TRUE,
  outlier.label = region) + 
  ylab("CHIRPS - 1985-2018 (mm/month)") +
  xlab("") +
  theme_classic() + theme(legend.position = "none")

c4 <- ggbetweenstats(
  data = Data,
  x    = Clas_ant.nat.2018, # Clas_ant2018.nat.1985 / Clas_ant2018.nat.2002 / Clas_ant.nat.2018
  y    = TWSrec_mm_SL_s85, ## NOT normally distributed and NOT Different Variance
  results.subtitle = T,
  var.equal = T, # T for Fisher ANOVA: Variance NOT Differs
  type = "np", # parametric, nonparametric, robust, bayes
  p.adjust.method = "bonferroni",
  bf.message = T, # only usefull for parametric test
  pairwise.display = "s",
  centrality.point.args = list(size = 2, color = "darkred"),
  outlier.tagging = TRUE,
  outlier.label = region) + 
  ylab("TWSrec - 1985-2018 (mm/month)") +
  xlab("") + 
  theme_classic() + theme(legend.position = "none")

## combining the individual plots into a single plot
combine_plots(
  list(c1, c2, c3, c4),
  plotgrid.args = list(nrow = 2),
  annotation.args = list(
    #title ="Sen's slope magnitude trend of precipitation (left) and terrestrial water storage (right)"
  )
)


#=========================== Trend groups (+)_trend/(-)_trend/no_trend ===========================#
Data %>%
  group_by(GRACE_trend_s02) %>% 
  normality(CHIRPS_mm_SL_s02)
### Shapiro-Wilk test
## p<0.05 => even if only one group p<0.05 is sufficient to say NOT normally distr
## p>0.05 => normally distributed

#==================== Levene's test for homogeneity of variance across groups. ===================#
leveneTest(CHIRPS_mm_SL_s02 ~ GRACE_trend_s02, Data)
## p<0.05 => variance are different >> Welch's ANOVA >> F
## p>0.05 => variance NOT Different >> Fisher  ANOVA >> T

## Statistical comparison beteween trend groups
t1 <- ggbetweenstats(
  data = Data,
  x    = TWSrec_trend_s85, # Clas_ant2018.nat.1985 / Clas_ant2018.nat.2002 / Clas_ant.nat.2018
  y    = CHIRPS_mm_SL_s85, ## NOT normally distributed and NOT Differ Variance
  results.subtitle = T,
  var.equal = T, # F for Welsh ANOVA: Variance different
  type = "np", # parametric, nonparametric, robust, bayes
  p.adjust.method = "bonferroni",
  bf.message = T, # only usefull for parametric test
  pairwise.display = "s",
  centrality.point.args = list(size = 2, color = "darkred"),
  outlier.tagging = TRUE,
  outlier.label = region) + 
  ylab("CHIRPS - 1985-2018 (mm/month)") +
  xlab("Groups of TWSrec trends 1985-2018") +
  theme_classic() + theme(legend.position = "none")

t2 <- ggbetweenstats(
  data = Data, 
  x    = GRACE_trend_s02, # Clas_ant2018.nat.1985 / Clas_ant2018.nat.2002 / Clas_ant.nat.2018
  y    = CHIRPS_mm_SL_s02, ## NOT normally distributed and Different Variance
  results.subtitle = T,
  var.equal = T, # F for Welsh ANOVA: Variance different
  type = "np", # parametric, nonparametric, robust, bayes
  p.adjust.method = "bonferroni",
  bf.message = T, # only usefull for parametric test
  pairwise.display = "s",
  centrality.point.args = list(size = 2, color = "darkred"),
  outlier.tagging = TRUE,
  outlier.label = region) + 
  ylab("CHIRPS - 2002-2016 (mm/month)") +
  xlab("Groups of GRACE trends 2002-2016") +
  theme_classic() + theme(legend.position = "none")

## combining the individual plots into a single plot
combine_plots(
 list(t1, t2),
 plotgrid.args = list(nrow = 1),
 annotation.args = list(
    title ="Sen's slope magnitude trend of precipitation (left) and terrestrial water storage (right)"
  )
)


#============================== To interpret some results test ===================================#
interpret_omega_squared(0.38) #>>> Parametric (normally distributed)
interpret_epsilon_squared(0.47) #>>> Non-parametric (NOT normally distributed)
interpret_r2(0.27)
interpret_bf(-2.7, log = T, include_value = T)
#>>> Bayes Factor (log=TRUE) interpretation (Jeffreys, 1961)
#>H0: 
#> If (+): in favour of the H0!!!!
#> If (-): against of the H0!! or, in favour of the H1


#' BF10 indicates the Bayes factor in favor of H1 over H0.
#' BF01 indicates the Bayes factor in favor of H0 over H1. 
#' Specifically, BF01 = 1/BF10. Larger positive values of BF01 indicate more support for H0.
#' Bayes factors range from 0 to âˆž, and a Bayes factor of 1 indicates that both hypotheses
#' predicted the data equally well.

#==================================== Linear Regression models ===================================#
# y~x >>> precipitation (CHIRPS) ~ % area of native covered
# Plot linear trend + confidence interval
sc1 <- ggplot(Data, aes(y = CHIRPS_mm_SL_s02, x=pp_nat_reg_18)) +
  geom_point() +
  geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
  theme_classic() +
  scale_y_continuous(labels = scales::comma) + 
  scale_x_continuous(labels = scales::comma) +
  theme_minimal() + #removes axes
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  labs(y="Sen's slop of CHIRPS (mm/month)",
       x="% of the regiona area covered by natural vegetation 2018",
       title = "SL for CHIRPS (2002 - 2016) x % of Natural Covering Area for 2018") +
  stat_poly_eq(aes(label =  paste(stat(eq.label),stat(rr.label), sep = "*\", \"*")),
               formula=y ~ x,coef.digits = 3,rr.digits=2,parse=T,col="red")

# y~x >>> GRACE ~ % area of native covered
# Plot linear trend + confidence interval
sc3 <- ggplot(Data, aes(y=GRACE_mm_SL_s02, x=pp_nat_reg_18)) +
  geom_point() +
  geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
  theme_classic() +
  scale_y_continuous(labels = scales::comma) + 
  scale_x_continuous(labels = scales::comma) +
  theme_minimal() + #removes axes
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  labs(y="Sen's slop of GRACE (mm/month)",
       x="% of the regiona area covered by natural vegetation 2018",
       title = "SL for GRACE (2002 - 2016) x % of Natural Covering Area for 2018") +
  stat_poly_eq(aes(label =  paste(stat(eq.label),stat(rr.label), sep = "*\", \"*")),
               formula=y ~ x,coef.digits = 3,rr.digits=2,parse=T,col="red")

# y~x >>> precipitation (CHIRPS) ~ % area of native covered
# Plot linear trend + confidence interval
se1 <- ggplot(Data, aes(y=CHIRPS_mm_SL_s85, x=pp_nat_reg_18)) +
  geom_point() +
  geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
  theme_classic() +
  scale_y_continuous(labels = scales::comma) + 
  scale_x_continuous(labels = scales::comma) +
  theme_minimal() + #removes axes
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  labs(y="Sen's slop of CHIRPS (mm/month)",
       x="% of the regiona area covered by natural vegetation 2018",
       title = "SL for CHIRPS (1985 - 2018) x % of Natural Covering Area for 2018") +
  stat_poly_eq(aes(label =  paste(stat(eq.label),stat(rr.label), sep = "*\", \"*")),
               formula=y ~ x,coef.digits = 3,rr.digits=2,parse=T,col="red")

# y~x >>> precipitation (TWSrec) ~ % area of native covered
# Plot linear trend + confidence interval
se3 <- ggplot(Data, aes(y=TWSrec_mm_SL_s85, x=pp_nat_reg_18)) +
  geom_point() +
  geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
  theme_classic() +
  scale_y_continuous(labels = scales::comma) + 
  scale_x_continuous(labels = scales::comma) +
  theme_minimal() + #removes axes
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  labs(y="Sen's slop of TWSrec (mm/month)",
       x="% of the regiona area covered by natural vegetation 2018",
       title = "SL for TWSrec (1985 - 2018) x % of Natural Covering Area for 2018") +
  stat_poly_eq(aes(label =  paste(stat(eq.label),stat(rr.label), sep = "*\", \"*")),
               formula=y ~ x,coef.digits = 3,rr.digits=2,parse=T,col="red")

## combining the individual plots into a single plot
combine_plots(
 list(sc1, sc3, se1, se3),
 plotgrid.args = list(nrow = 2),
 annotation.args = list(
#title ="Sen's slope magnitude trend of precipitation (left) and terrestrial water storage (right)"
    #    caption = "Source: TESTE"
  )
)

#=============================== Linear Regression models Residues ===============================#
# y~x >>> precipitation (CHIRPS) ~ % area of native covered
# Plot residues
lm_fit_se1 <- lm(CHIRPS_mm_SL_s85 ~ pp_nat_reg_18, data=Data)
Data$resid_se1 <- resid(lm_fit_se1)
se2 <- ggplot(Data, aes(y=CHIRPS_mm_SL_s85, x=resid_se1)) +
  geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
  theme_classic() +
  scale_x_continuous(labels = scales::comma) +
  theme_minimal() + #removes axes
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  labs(y="Residues of linear model of Sen's slope of CHIRPS",
       x="Residues of the regiona area covered by natural vegetation 2018",
       title = "Residues for CHIRPS (1985 - 2018) x Natural Covering Area for 2018") +
  stat_poly_eq(aes(label =  paste(stat(eq.label),stat(rr.label), sep = "*\", \"*")),
               formula=y ~ x,coef.digits = 3,rr.digits=3,parse=T,col="red")

# y~x >>> precipitation (CHIRPS) ~ % area of native covered
# Plot residues
lm_fit_sc2 <- lm(CHIRPS_mm_SL_s02 ~ pp_nat_reg_18, data=Data)
Data$resid_sc2 <- resid(lm_fit_sc2)
sc2 <- ggplot(Data, aes(y=CHIRPS_mm_SL_s02, x=resid_sc2)) +
  geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
  theme_classic() +
  scale_x_continuous(labels = scales::comma) +
  theme_minimal() + #removes axes
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  labs(y="Residues of linear model of Sen's slope of CHIRPS",
       x="Residues of the regiona area covered by natural vegetation 2018",
       title = "Residues for CHIRPS (2002 - 2016) x Natural Covering Area for 2018") +
  stat_poly_eq(aes(label =  paste(stat(eq.label),stat(rr.label), sep = "*\", \"*")),
               formula=y ~ x,coef.digits = 3,rr.digits=3,parse=T,col="red")

# y~x >>> precipitation (GRACE) ~ % area of native covered
# Plot residues
lm_fit_sc4 <- lm(GRACE_mm_SL_s02 ~ pp_nat_reg_18, data=Data)
Data$resid_sc4 <- resid(lm_fit_sc4)
sc4 <- ggplot(Data, aes(y=GRACE_mm_SL_s02, x=resid_sc4)) +
  geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
  theme_classic() +
  scale_x_continuous(labels = scales::comma) +
  theme_minimal() + #removes axes
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  labs(y="Residues of linear model of Sen's slope of GRACE",
       x="Residues of the regiona area covered by natural vegetation 2018",
       title = "Residues for GRACE (2002 - 2016) x Natural Covering Area for 2018") +
  stat_poly_eq(aes(label =  paste(stat(eq.label),stat(rr.label), sep = "*\", \"*")),
               formula=y ~ x,coef.digits = 3,rr.digits=3,parse=T,col="red")

# y~x >>> precipitation (TWSrec) ~ % area of native covered
# Plot residues
lm_fit_se4 <- lm(TWSrec_mm_SL_s85 ~ pp_nat_reg_18, data=Data)
Data$resid_se4 <- resid(lm_fit_se4)
se4 <- ggplot(Data, aes(y=TWSrec_mm_SL_s85, x=resid_se4)) +
  geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
  theme_classic() +
  scale_x_continuous(labels = scales::comma) +
  theme_minimal() + #removes axes
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  labs(y="Residues of linear model of Sen's slope of TWSrec",
       x="Residues of the regiona area covered by natural vegetation 2018",
       title = "Residues for TWSrec (1985 - 2018) x Natural Covering Area for 2018") +
  stat_poly_eq(aes(label =  paste(stat(eq.label),stat(rr.label), sep = "*\", \"*")),
               formula=y ~ x,coef.digits = 3,rr.digits=3,parse=T,col="red")

## combining the individual plots into a single plot
combine_plots(
  list(sc2, sc4, se2, se4),
  plotgrid.args = list(nrow = 2),
  annotation.args = list(
#title="Sen's slope magnitude trend of precipitation (left) and terrestrial water storage (right)"
    #    caption = "Source: TESTE"
  )
)

